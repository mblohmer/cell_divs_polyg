f <- function(file) {
x <- fread(file)
x$length <- 1:nrow(x)
x <- melt(x, id.var='length')
toavg <- function(x) {
avg <- sum(x$length * x$value) / sum(x$value)
list(avg=avg)
}
print(x)
x <- x[,toavg(.SD),by=variable]
marker <- tail(strsplit(file,'[/]')[[1]],1)
marker <- strsplit(marker,'_')[[1]][1]
x$marker <- marker
x
}
marker_files <- dir(marker_dir, full.names=T)
l <- lapply(marker_files, f)
l <- rbindlist(l)
l <- l[,c(1,3,2),with=F]
names(l) <- c('sample','marker','length')
#l$sample <- gsub(subject,'',l$sample)
l$sample <- as.character(l$sample)
#l$sample <- sapply(l$sample, function(s) strsplit(s,'_')[[1]][1])
l$subject <- subject
l
}
markers <- get_marker_lengths(subject,marker_dir)
root_sample <- select_normal(subject)
markers <- markers %>%
group_by(marker) %>%
filter(any(str_detect(sample, normal))) %>%
mutate(length = length - length[str_detect(sample, normal)][1]) %>%
as.data.table
markers$subject <- subject
markerlengths <- bind_rows(markerlengths, markers)
}
markerlengths <- markerlengths %>%
mutate(sample = str_sub(sample, end = -3))
markerlengths
markerlengths
markerlengths_haber1
# Haber2 Markerlengths ----------------------------------------------------
# haber2
setwd("~/Dropbox (Partners HealthCare)/Naxerova lab/Project_Haber_multifocal_lung_cancer/Haber2_FINAL_results/")
normal_samples <- c("CC001_5|T790M_III_1_N|CC002_11|CC005_11|WGS00C_N20|WGS00E_N22|CC006_3|WGS00D_N8")
# create a table to which others can be joined
markerlengths <- NULL
select_normal <- function(subject) {
if (subject=="CC001") {normal_sample <- "CC001_5"
} else if (subject=="T790M") {normal_sample <- "T790M_III_1_N"
} else if (subject=="CC002") {normal_sample <- "CC002_11"
} else if (subject=="CC005") {normal_sample <- "CC005_11"
} else if (subject=="WGS00C") {normal_sample <- "WGS00C_N20"
} else if (subject=="WGS00E") {normal_sample <- "WGS00E_N22"
} else if (subject=="CC006") {normal_sample <- "CC006_3"
} else if (subject=="WGS00D") {normal_sample <- "WGS00D_N8"}
normal_sample
}
for (dir in dir_list) {
subject <-  str_split(dir, "_") %>% purrr::map(1) %>% unlist
#select normal
normal <- select_normal(subject)
normal <- paste0("^", normal)
## path to poly-G raw data directory (marker length files)
marker_dir <- paste0("~/Dropbox (Partners HealthCare)/Naxerova lab/Project_Haber_multifocal_lung_cancer/Haber2_FINAL_results/", dir, "/repre_repli_data/")
## load marker lengths and get the average length of each marker in each sample
get_marker_lengths <- function(subject,marker_dir) {
message(subject)
f <- function(file) {
x <- fread(file)
x$length <- 1:nrow(x)
x <- melt(x, id.var='length')
toavg <- function(x) {
avg <- sum(x$length * x$value) / sum(x$value)
list(avg=avg)
}
print(x)
x <- x[,toavg(.SD),by=variable]
marker <- tail(strsplit(file,'[/]')[[1]],1)
marker <- strsplit(marker,'_')[[1]][1]
x$marker <- marker
x
}
marker_files <- dir(marker_dir, full.names=T)
l <- lapply(marker_files, f)
l <- rbindlist(l)
l <- l[,c(1,3,2),with=F]
names(l) <- c('sample','marker','length')
#l$sample <- gsub(subject,'',l$sample)
l$sample <- as.character(l$sample)
#l$sample <- sapply(l$sample, function(s) strsplit(s,'_')[[1]][1])
l$subject <- subject
l
}
markers <- get_marker_lengths(subject,marker_dir)
root_sample <- select_normal(subject)
markers <- markers %>%
group_by(marker) %>%
filter(any(str_detect(sample, normal))) %>%
mutate(length = length - length[str_detect(sample, normal)][1]) %>%
as.data.table
markerlengths_int  <- dcast(sample ~ marker, value.var='length', data=markers)
markerlengths_int$subject <- subject
markerlengths <- bind_rows(markerlengths, markerlengths_int)
}
markerlengths
markerlengths <- markerlengths %>%
mutate(sample = str_sub(sample, end = -3))
markerlengths
markerlengths_haber2 <- markerlengths
bind_rows(markerlengths_haber1, markerlengths_haber2)
joined-lengths <- bind_rows(markerlengths_haber1, markerlengths_haber2)
joined_lengths <- bind_rows(markerlengths_haber1, markerlengths_haber2)
## get all pairwise (unique) combinations only for primary samples, and then calculate the variance in the differences between their mean lengths
samples <- joined_lengths$sample
samples
combos_wide <- combn(primary_samples, m= 2) %>% as.data.frame()
## make combo table longer
combos_long <- data.frame(s1=as.character(combos_wide[1,]), s2=as.character(combos_wide[2,]))
combos_long
combos_wide <- combn(samples, m= 2) %>% as.data.frame()
## make combo table longer
combos_long <- data.frame(s1=as.character(combos_wide[1,]), s2=as.character(combos_wide[2,]))
combos_long
samples
markerlengths_haber2
markerlengths_haber2$sample %>% str_split("_")
markerlengths_haber2$sample %>% str_split("_")[1]
str_split(markerlengths_haber2$sample, "_")
str_split(markerlengths_haber2$sample, "_") %>% map(1)
# reorder names to make sample name first for easier processing
split_names <- str_split(markerlengths_haber2$sample, "_")
paste(map(split_names, 2), map(split_names, 1), sep = "_")
markerlengths_haber2$sample <- paste(map(split_names, 2), map(split_names, 1), sep = "_")
markerlengths_haber2
joined_lengths <- bind_rows(markerlengths_haber1, markerlengths_haber2)
## get all pairwise (unique) combinations only for primary samples, and then calculate the variance in the differences between their mean lengths
samples <- joined_lengths$sample
combos_wide <- combn(samples, m= 2) %>% as.data.frame()
samples
## make combo table longer
combos_long <- data.frame(s1=as.character(combos_wide[1,]), s2=as.character(combos_wide[2,]))
combos_long
combos_long %>%
separate(s1, c(NA, "sample_a"), sep="_", remove = FALSE) %>%
separate(s2, c(NA, "sample_b"), sep="_", remove = FALSE)
combos_long %>%
separate(s1, c(NA, "sample_a"), sep="_", remove = FALSE) %>%
separate(s2, c(NA, "sample_b"), sep="_", remove = FALSE) %>%
mutate(sample_a=ifelse(sample_a=="WGS004", "WGS00D", sample_a))
combos_long %>%
separate(s1, c(NA, "sample_a"), sep="_", remove = FALSE) %>%
separate(s2, c(NA, "sample_b"), sep="_", remove = FALSE) %>%
mutate(sample_a=ifelse(sample_a=="WGS004", "WGS00D", sample_a),
sample_b=ifelse(sample_b=="WGS004", "WGS00D", sample_b))
## remove all combintions where both primaries come from the same sample
x <- combos_long %>%
separate(s1, c(NA, "sample_a"), sep="_", remove = FALSE) %>%
separate(s2, c(NA, "sample_b"), sep="_", remove = FALSE) %>%
mutate(sample_a=ifelse(sample_a=="WGS004", "WGS00D", sample_a),
sample_b=ifelse(sample_b=="WGS004", "WGS00D", sample_b)) %>%
filter(sample_a!=sample_b) %>%
dplyr::select(s1, s2)
x
filter(x, str_detect(a, "WGS004"))
filter(x, str_detect(s1, "WGS004"))
filter(x, str_detect(s1, "WGS00D"))
filter(x, str_detect(s2, "WGS00D"))
# Haber2 Markerlengths ----------------------------------------------------
# haber2
setwd("~/Dropbox (Partners HealthCare)/Naxerova lab/Project_Haber_multifocal_lung_cancer/Haber2_FINAL_results/")
normal_samples <- c("CC001_5|T790M_III_1_N|CC002_11|CC005_11|WGS00C_N20|WGS00E_N22|CC006_3|WGS00D_N8")
# create a table to which others can be joined
markerlengths <- NULL
select_normal <- function(subject) {
if (subject=="CC001") {normal_sample <- "CC001_5"
} else if (subject=="T790M") {normal_sample <- "T790M_III_1_N"
} else if (subject=="CC002") {normal_sample <- "CC002_11"
} else if (subject=="CC005") {normal_sample <- "CC005_11"
} else if (subject=="WGS00C") {normal_sample <- "WGS00C_N20"
} else if (subject=="WGS00E") {normal_sample <- "WGS00E_N22"
} else if (subject=="CC006") {normal_sample <- "CC006_3"
} else if (subject=="WGS00D") {normal_sample <- "WGS00D_N8"}
normal_sample
}
for (dir in dir_list) {
subject <-  str_split(dir, "_") %>% purrr::map(1) %>% unlist
#select normal
normal <- select_normal(subject)
normal <- paste0("^", normal)
## path to poly-G raw data directory (marker length files)
marker_dir <- paste0("~/Dropbox (Partners HealthCare)/Naxerova lab/Project_Haber_multifocal_lung_cancer/Haber2_FINAL_results/", dir, "/repre_repli_data/")
## load marker lengths and get the average length of each marker in each sample
get_marker_lengths <- function(subject,marker_dir) {
message(subject)
f <- function(file) {
x <- fread(file)
x$length <- 1:nrow(x)
x <- melt(x, id.var='length')
toavg <- function(x) {
avg <- sum(x$length * x$value) / sum(x$value)
list(avg=avg)
}
print(x)
x <- x[,toavg(.SD),by=variable]
marker <- tail(strsplit(file,'[/]')[[1]],1)
marker <- strsplit(marker,'_')[[1]][1]
x$marker <- marker
x
}
marker_files <- dir(marker_dir, full.names=T)
l <- lapply(marker_files, f)
l <- rbindlist(l)
l <- l[,c(1,3,2),with=F]
names(l) <- c('sample','marker','length')
#l$sample <- gsub(subject,'',l$sample)
l$sample <- as.character(l$sample)
#l$sample <- sapply(l$sample, function(s) strsplit(s,'_')[[1]][1])
l$subject <- subject
l
}
markers <- get_marker_lengths(subject,marker_dir)
root_sample <- select_normal(subject)
markers <- markers %>%
group_by(marker) %>%
filter(any(str_detect(sample, normal))) %>%
mutate(length = length - length[str_detect(sample, normal)][1]) %>%
filter(!str_detect(sample, normal)) %>%
as.data.table
markerlengths_int  <- dcast(sample ~ marker, value.var='length', data=markers)
markerlengths_int$subject <- subject
markerlengths <- bind_rows(markerlengths, markerlengths_int)
}
markerlengths <- markerlengths %>%
mutate(sample = str_sub(sample, end = -3))
markerlengths_haber2 <- markerlengths
# reorder names to make sample name first for easier processing
split_names <- str_split(markerlengths_haber2$sample, "_")
markerlengths_haber2$sample <- paste(map(split_names, 2), map(split_names, 1), sep = "_")
split_names
markerlengths_haber2$sample <- paste(map(split_names, 2), map(split_names, 1), sep = "_")
joined_lengths <- bind_rows(markerlengths_haber1, markerlengths_haber2)
## get all pairwise (unique) combinations only for primary samples, and then calculate the variance in the differences between their mean lengths
samples <- joined_lengths$sample
combos_wide <- combn(samples, m= 2) %>% as.data.frame()
## make combo table longer
combos_long <- data.frame(s1=as.character(combos_wide[1,]), s2=as.character(combos_wide[2,]))
combos_long
## remove all combintions where both primaries come from the same sample
x <- combos_long %>%
separate(s1, c(NA, "sample_a"), sep="_", remove = FALSE) %>%
separate(s2, c(NA, "sample_b"), sep="_", remove = FALSE) %>%
mutate(sample_a=ifelse(sample_a=="WGS004", "WGS00D", sample_a),
sample_b=ifelse(sample_b=="WGS004", "WGS00D", sample_b)) %>%
filter(sample_a!=sample_b,!str_detect(s1, "N"), str_detect(s2, "N")) %>%
dplyr::select(s1, s2)
x
## remove all combintions where both primaries come from the same sample
x <- combos_long %>%
separate(s1, c(NA, "sample_a"), sep="_", remove = FALSE) %>%
separate(s2, c(NA, "sample_b"), sep="_", remove = FALSE) %>%
mutate(sample_a=ifelse(sample_a=="WGS004", "WGS00D", sample_a),
sample_b=ifelse(sample_b=="WGS004", "WGS00D", sample_b)) %>%
filter(sample_a!=sample_b,!str_detect(s1, "N"), !str_detect(s2, "N")) %>%
dplyr::select(s1, s2)
x
## moving sample names to the rownams
m <- joined_lengths %>%
dplyr::select(-subject) %>%
column_to_rownames("sample")
joined_lengths
("sample")
## moving sample names to the rownams
m <- joined_lengths %>%
dplyr::select(-subject) %>%
column_to_rownames("sample")
# Haber2 Markerlengths ----------------------------------------------------
# haber2
setwd("~/Dropbox (Partners HealthCare)/Naxerova lab/Project_Haber_multifocal_lung_cancer/Haber2_FINAL_results/")
normal_samples <- c("CC001_5|T790M_III_1_N|CC002_11|CC005_11|WGS00C_N20|WGS00E_N22|CC006_3|WGS00D_N8")
# create a table to which others can be joined
markerlengths <- NULL
select_normal <- function(subject) {
if (subject=="CC001") {normal_sample <- "CC001_5"
} else if (subject=="T790M") {normal_sample <- "T790M_III_1_N"
} else if (subject=="CC002") {normal_sample <- "CC002_11"
} else if (subject=="CC005") {normal_sample <- "CC005_11"
} else if (subject=="WGS00C") {normal_sample <- "WGS00C_N20"
} else if (subject=="WGS00E") {normal_sample <- "WGS00E_N22"
} else if (subject=="CC006") {normal_sample <- "CC006_3"
} else if (subject=="WGS00D") {normal_sample <- "WGS00D_N8"}
normal_sample
}
for (dir in dir_list) {
subject <-  str_split(dir, "_") %>% purrr::map(1) %>% unlist
#select normal
normal <- select_normal(subject)
normal <- paste0("^", normal)
## path to poly-G raw data directory (marker length files)
marker_dir <- paste0("~/Dropbox (Partners HealthCare)/Naxerova lab/Project_Haber_multifocal_lung_cancer/Haber2_FINAL_results/", dir, "/repre_repli_data/")
## load marker lengths and get the average length of each marker in each sample
get_marker_lengths <- function(subject,marker_dir) {
message(subject)
f <- function(file) {
x <- fread(file)
x$length <- 1:nrow(x)
x <- melt(x, id.var='length')
toavg <- function(x) {
avg <- sum(x$length * x$value) / sum(x$value)
list(avg=avg)
}
x <- x[,toavg(.SD),by=variable]
marker <- tail(strsplit(file,'[/]')[[1]],1)
marker <- strsplit(marker,'_')[[1]][1]
x$marker <- marker
x
}
marker_files <- dir(marker_dir, full.names=T)
l <- lapply(marker_files, f)
l <- rbindlist(l)
l <- l[,c(1,3,2),with=F]
names(l) <- c('sample','marker','length')
#l$sample <- gsub(subject,'',l$sample)
l$sample <- as.character(l$sample)
#l$sample <- sapply(l$sample, function(s) strsplit(s,'_')[[1]][1])
l$subject <- subject
l
}
markers <- get_marker_lengths(subject,marker_dir)
root_sample <- select_normal(subject)
markers <- markers %>%
group_by(marker) %>%
filter(any(str_detect(sample, normal))) %>%
mutate(length = length - length[str_detect(sample, normal)][1]) %>%
filter(!str_detect(sample, normal)) %>%
as.data.table
markerlengths_int  <- dcast(sample ~ marker, value.var='length', data=markers)
markerlengths_int$subject <- subject
markerlengths <- bind_rows(markerlengths, markerlengths_int)
}
markerlengths <- markerlengths %>%
mutate(sample = str_sub(sample, end = -3))
markerlengths_haber2 <- markerlengths
# reorder names to make sample name first for easier processing
split_names <- str_split(markerlengths_haber2$sample, "_")
markerlengths_haber2$sample <- paste(map(split_names, 2), map(split_names, 1), sep = "_")
joined_lengths <- bind_rows(markerlengths_haber1, markerlengths_haber2)
## get all pairwise (unique) combinations only for primary samples, and then calculate the variance in the differences between their mean lengths
samples <- joined_lengths$sample
combos_wide <- combn(samples, m= 2) %>% as.data.frame()
## make combo table longer
combos_long <- data.frame(s1=as.character(combos_wide[1,]), s2=as.character(combos_wide[2,]))
## remove all combintions where both primaries come from the same sample
x <- combos_long %>%
separate(s1, c(NA, "sample_a"), sep="_", remove = FALSE) %>%
separate(s2, c(NA, "sample_b"), sep="_", remove = FALSE) %>%
mutate(sample_a=ifelse(sample_a=="WGS004", "WGS00D", sample_a),
sample_b=ifelse(sample_b=="WGS004", "WGS00D", sample_b)) %>%
filter(sample_a!=sample_b,!str_detect(s1, "N"), !str_detect(s2, "N")) %>%
dplyr::select(s1, s2)
## moving sample names to the rownams
m <- joined_lengths %>%
dplyr::select(-subject) %>%
column_to_rownames("sample")
m
joined_lengths
split_names
markerlengths_haber2
markers
# create a table to which others can be joined
markerlengths <- NULL
select_normal <- function(subject) {
if (subject=="CC001") {normal_sample <- "CC001_5"
} else if (subject=="T790M") {normal_sample <- "T790M_III_1_N"
} else if (subject=="CC002") {normal_sample <- "CC002_11"
} else if (subject=="CC005") {normal_sample <- "CC005_11"
} else if (subject=="WGS00C") {normal_sample <- "WGS00C_N20"
} else if (subject=="WGS00E") {normal_sample <- "WGS00E_N22"
} else if (subject=="CC006") {normal_sample <- "CC006_3"
} else if (subject=="WGS00D") {normal_sample <- "WGS00D_N8"}
normal_sample
}
for (dir in dir_list) {
subject <-  str_split(dir, "_") %>% purrr::map(1) %>% unlist
#select normal
normal <- select_normal(subject)
normal <- paste0("^", normal)
## path to poly-G raw data directory (marker length files)
marker_dir <- paste0("~/Dropbox (Partners HealthCare)/Naxerova lab/Project_Haber_multifocal_lung_cancer/Haber2_FINAL_results/", dir, "/repre_repli_data/")
## load marker lengths and get the average length of each marker in each sample
get_marker_lengths <- function(subject,marker_dir) {
message(subject)
f <- function(file) {
x <- fread(file)
x$length <- 1:nrow(x)
x <- melt(x, id.var='length')
toavg <- function(x) {
avg <- sum(x$length * x$value) / sum(x$value)
list(avg=avg)
}
x <- x[,toavg(.SD),by=variable]
marker <- tail(strsplit(file,'[/]')[[1]],1)
marker <- strsplit(marker,'_')[[1]][1]
x$marker <- marker
x
}
marker_files <- dir(marker_dir, full.names=T)
l <- lapply(marker_files, f)
l <- rbindlist(l)
l <- l[,c(1,3,2),with=F]
names(l) <- c('sample','marker','length')
#l$sample <- gsub(subject,'',l$sample)
l$sample <- as.character(l$sample)
#l$sample <- sapply(l$sample, function(s) strsplit(s,'_')[[1]][1])
l$subject <- subject
l
}
markers <- get_marker_lengths(subject,marker_dir) %>%
mutate(sample = str_sub(sample, end = -3))
root_sample <- select_normal(subject)
markers <- markers %>%
group_by(marker) %>%
filter(any(str_detect(sample, normal))) %>%
mutate(length = length - length[str_detect(sample, normal)][1]) %>%
filter(!str_detect(sample, normal)) %>%
as.data.table
markerlengths_int  <- dcast(sample ~ marker, value.var='length', data=markers)
markerlengths_int$subject <- subject
markerlengths <- bind_rows(markerlengths, markerlengths_int)
}
markerlengths
markerlengths_haber2 <- markerlengths
# reorder names to make sample name first for easier processing
split_names <- str_split(markerlengths_haber2$sample, "_")
markerlengths_haber2$sample <- paste(map(split_names, 2), map(split_names, 1), sep = "_")
joined_lengths <- bind_rows(markerlengths_haber1, markerlengths_haber2)
## get all pairwise (unique) combinations only for primary samples, and then calculate the variance in the differences between their mean lengths
samples <- joined_lengths$sample
combos_wide <- combn(samples, m= 2) %>% as.data.frame()
## make combo table longer
combos_long <- data.frame(s1=as.character(combos_wide[1,]), s2=as.character(combos_wide[2,]))
## remove all combintions where both primaries come from the same sample
x <- combos_long %>%
separate(s1, c(NA, "sample_a"), sep="_", remove = FALSE) %>%
separate(s2, c(NA, "sample_b"), sep="_", remove = FALSE) %>%
mutate(sample_a=ifelse(sample_a=="WGS004", "WGS00D", sample_a),
sample_b=ifelse(sample_b=="WGS004", "WGS00D", sample_b)) %>%
filter(sample_a!=sample_b,!str_detect(s1, "N"), !str_detect(s2, "N")) %>%
dplyr::select(s1, s2)
## moving sample names to the rownams
m <- joined_lengths %>%
dplyr::select(-subject) %>%
column_to_rownames("sample")
m
## get tumor-normal length (for each tumor) and calculate their pearson correlation
get_correlation <- function(i, x, m) {
s1 <- x$s1[i]
s2 <- x$s2[i]
mean_lengths1 <- as.numeric(m[s1,])
mean_lengths2 <- as.numeric(m[s2,])
# count on how markers observation the correlation is based
one_minus_two <- mean_lengths1 - mean_lengths2
marker_number <- sum(!is.na(one_minus_two))
if (marker_number>0) {
r <- cor(mean_lengths1, mean_lengths2, method='pearson', use="complete.obs")
list(s1=s1,s2=s2,pearson.r=r,markers=marker_number)
}
}
result_list <- lapply(1:nrow(x), get_correlation, x, m)
result <- rbindlist(result_list)
result
haber_interpatient_cor_20_markers <- result[markers>15]
haber_interpatient_cor_20_markers
haber_interpatient_cor_20_markers$pearson.r %>% men
haber_interpatient_cor_20_markers$pearson.r %>% mean
write_csv(haber_interpatient_cor_20_markers, "~/Dropbox (Partners HealthCare)/Naxerova lab/Martin Blohmer/taiwanese_lc/cor_scores/interpatient_cor_haber.csv")
write_csv(haber_interpatient_cor_20_markers, "~/Dropbox (Partners HealthCare)/Naxerova lab/Martin Blohmer/taiwanese_lc/data/interpatient_cor_haber.csv")
## remove all combintions where both primaries come from the same sample
x <- combos_long %>%
separate(s1, c(NA, "sample_a"), sep="_", remove = FALSE) %>%
separate(s2, c(NA, "sample_b"), sep="_", remove = FALSE) %>%
mutate(sample_a=ifelse(sample_a=="WGS004", "WGS00D", sample_a),
sample_b=ifelse(sample_b=="WGS004", "WGS00D", sample_b),
sample_a=ifelse(sample_a=="WGS005", "WGS00E", sample_a),
sample_b=ifelse(sample_b=="WGS005", "WGS00E", sample_b)) %>%
filter(sample_a!=sample_b,!str_detect(s1, "N"), !str_detect(s2, "N")) %>%
dplyr::select(s1, s2)
## moving sample names to the rownams
m <- joined_lengths %>%
dplyr::select(-subject) %>%
column_to_rownames("sample")
## get tumor-normal length (for each tumor) and calculate their pearson correlation
get_correlation <- function(i, x, m) {
s1 <- x$s1[i]
s2 <- x$s2[i]
mean_lengths1 <- as.numeric(m[s1,])
mean_lengths2 <- as.numeric(m[s2,])
# count on how markers observation the correlation is based
one_minus_two <- mean_lengths1 - mean_lengths2
marker_number <- sum(!is.na(one_minus_two))
if (marker_number>0) {
r <- cor(mean_lengths1, mean_lengths2, method='pearson', use="complete.obs")
list(s1=s1,s2=s2,pearson.r=r,markers=marker_number)
}
}
result_list <- lapply(1:nrow(x), get_correlation, x, m)
result <- rbindlist(result_list)
haber_interpatient_cor_20_markers <- result[markers>15]
haber_interpatient_cor_20_markers
write_csv(haber_interpatient_cor_20_markers, "~/Dropbox (Partners HealthCare)/Naxerova lab/Martin Blohmer/taiwanese_lc/data/interpatient_cor_haber.csv")
120*0.0623
129*0.0623
